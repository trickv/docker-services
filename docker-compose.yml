services:
  traefik:
    container_name: traefik
    image: traefik:saintmarcelin
    restart: unless-stopped
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.websecure.address=:443"
      - "--entryPoints.web.address=:80"
      - "--certificatesResolvers.le.acme.email=trick@vanstaveren.us"
      - "--certificatesResolvers.le.acme.storage=/acme/acme.json"
      #- "--certificatesResolvers.le.acme.caServer=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesResolvers.le.acme.tlsChallenge=true"
      - "--metrics.prometheus.entryPoint=metrics"
      - "--metrics.prometheus=true"
      - "--entryPoints.metrics.address=:7082"
      #- "--accesslog=true"

    ports:
      - "443:443"
      - "80:80"
      - "8079:8080"
      - "7082:7082"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./traefik/acme/:/acme/"
    labels:
      - com.centurylinklabs.watchtower.enable=true
#    network_mode: host

  whoami44:
    image: containous/whoami
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami44.entrypoints=websecure"
      - "traefik.http.routers.whoami44.tls.certresolver=le"
      - "traefik.http.routers.whoami44.rule=Host(`whoami44.home.v9n.us`, `whoami78.home.v9n.us`)"
      - "traefik.http.services.whoami44.loadbalancer.server.port=80"

  cadvisor:
    restart: unless-stopped
    image: gcr.io/cadvisor/cadvisor:v0.47.1
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    devices:
      - /dev/kmsg
    privileged: true
    expose:
      - 8080
    ports:
      - "8005:8080"
    networks:
      - monitoring
#    command: --disable_metrics=diskIO

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      WATCHTOWER_LABEL_ENABLE: 1          # Only include containers with enable label
    #command: -i 10

  rsync-obd:
    image: axiom/rsync-server:latest
    restart: unless-stopped
    volumes:
      - ./obd:/data
    ports:
      - 8730:873
    environment:
      - USERNAME=obd
      - PASSWORD=obd

  unifi-controller:
    image: linuxserver/unifi-controller:LTS
    container_name: unifi-controller
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - ./unifi:/config
    ports:
      - 3478:3478/udp
      - 10001:10001/udp
      - 8080:8080
      - 8081:8081
      - 8443:8443
      - 8843:8843
      - 8880:8880
      - 6789:6789
    restart: unless-stopped

  airsonic:
    container_name: airsonic
    image: linuxserver/airsonic
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
      #- CONTEXT_PATH=<URL_BASE> #optional
      #- JAVA_OPTS=<options> #optional
    volumes:
      - ./airsonic-config:/config
      #- config:/airsonic/config
      - /mnt/music/Master_Collection:/music
      #- playlists:/airsonic/playlists
      #- podcasts:/airsonic/podcasts
    mem_limit: 1000m
    ports:
      - 4039:4040
      - 8444:8443
    restart: unless-stopped                                                        #network_mode: host
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.airsonic.rule=Host(`airsonic.home.v9n.us`)"
      - "traefik.http.routers.airsonic.entrypoints=websecure"
      - "traefik.http.routers.airsonic.tls.certresolver=le"
      - "traefik.http.services.airsonic.loadbalancer.server.port=4040"

  nextcloud:
    container_name: nextcloud
    image: nextcloud:25.0.2-apache
    volumes:
      - /mnt/nextcloud:/var/www/html
      - /mnt/pictures:/mnt/pictures
      - /mnt/music/Master_Collection:/mnt/music
    mem_limit: 1500m
    restart: always
    environment:
      - NEXTCLOUD_TRUSTED_DOMAIN=nextcloud.home.v9n.us"
      - TRUSTED_PROXIES=172.16.0.0/12
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nextcloud.rule=Host(`nextcloud.home.v9n.us`)"
      - "traefik.http.routers.nextcloud.entrypoints=websecure"
      - "traefik.http.routers.nextcloud.tls.certresolver=le"
      - "traefik.http.services.nextcloud.loadbalancer.server.port=80"

  proxy_ultracoin_hass:
    image: amaysim/docker-tcp-proxy
    restart: unless-stopped
    environment:
      - CONTAINER_PORT=80
      - REMOTE_HOST=172.16.17.23
      - REMOTE_PORT=8123
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.hassproxy.rule=Host(`hass-ltc.home.v9n.us`, `hass.vanstaveren.us`)"
      - "traefik.http.routers.hassproxy.entrypoints=websecure"
      - "traefik.http.routers.hassproxy.tls.certresolver=le"
      - "traefik.http.services.hassproxy.loadbalancer.server.port=80"
  
  
  proxy_prometheus:
    container_name: tcpproxy_prometheus
    image: amaysim/docker-tcp-proxy
    restart: unless-stopped
    environment:
      - CONTAINER_PORT=80
      - REMOTE_HOST=172.16.17.23
      - REMOTE_PORT=9090
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.home.v9n.us`)"
      - "traefik.http.routers.prometheus.entrypoints=websecure"
      - "traefik.http.routers.prometheus.tls.certresolver=le"
      - "traefik.http.services.prometheus.loadbalancer.server.port=80"
      - "traefik.http.routers.prometheus.middlewares=prometheusauthmiddleware"
      - "traefik.http.middlewares.prometheusauthmiddleware.basicauth.users=prometheus:$$apr1$$u13f5Obh$$ERJ3TfhQ/Wsz3gpwGj9gd1"


networks:
  monitoring:
    driver: bridge
