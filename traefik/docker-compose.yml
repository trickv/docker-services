version: '2'

services:
  reverse-proxy:
    image: traefik:v2.3.2
    restart: unless-stopped
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.websecure.address=:443"
      - "--entryPoints.web.address=:80"
      - "--certificatesResolvers.le.acme.email=trick@vanstaveren.us"
      - "--certificatesResolvers.le.acme.storage=/acme.json"
      #- "--certificatesResolvers.le.acme.caServer=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesResolvers.le.acme.tlsChallenge=true"
      - "--metrics.prometheus.entryPoint=metrics"
      - "--metrics.prometheus=true"
      - "--entryPoints.metrics.address=:7082"

    ports:
      - "443:443"
      - "80:80"
      - "8079:8080"
      - "7082:7082"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    network_mode: host

  airsonic:
    container_name: airsonic
    image: linuxserver/airsonic
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
      #- CONTEXT_PATH=<URL_BASE> #optional
      #- JAVA_OPTS=<options> #optional
    volumes:
      - ./config:/config
      #- config:/airsonic/config
      - /mnt/music/Master_Collection:/music
      #- playlists:/airsonic/playlists
      #- podcasts:/airsonic/podcasts
    ports:
      - 4039:4040
      - 8444:8443
    restart: unless-stopped
    #network_mode: host
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.airsonic.rule=Host(`airsonic.home.v9n.us`)"
      - "traefik.http.routers.airsonic.entrypoints=websecure"
      - "traefik.http.routers.airsonic.tls.certresolver=le"
      - "traefik.http.services.airsonic.loadbalancer.server.port=4040"
  
  hass:
    container_name: hass
    image: homeassistant/home-assistant:2022.12
    volumes:
      - ./hass-config:/config
    devices:
      - /dev/ttyUSB0
    environment:
      - TZ=America/Chicago
    restart: always
    network_mode: host
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.hass.rule=Host(`hass.vanstaveren.us`)"
      - "traefik.http.routers.hass.entrypoints=websecure"
      - "traefik.http.routers.hass.tls.certresolver=le"
      - "traefik.http.services.hass.loadbalancer.server.port=8123"

  nextcloud:
    container_name: nextcloud
    image: nextcloud:25.0.2-apache
    volumes:
      - /mnt/foo/nextcloud:/var/www/html
      - /mnt/pictures:/mnt/pictures
    mem_limit: 1500m
    restart: always
    environment:
      - NEXTCLOUD_TRUSTED_DOMAIN=nextcloud.home.v9n.us"
      - TRUSTED_PROXIES=172.16.0.0/12
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nextcloud.rule=Host(`nextcloud.home.v9n.us`)"
      - "traefik.http.routers.nextcloud.entrypoints=websecure"
      - "traefik.http.routers.nextcloud.tls.certresolver=le"
      - "traefik.http.services.nextcloud.loadbalancer.server.port=80"

  unifi-poller:
    container_name: unifi-poller
    image: golift/unifi-poller
    volumes:
      - ./unifi-poller/unifi-poller.conf:/config/unifi-poller.conf
    restart: always
    network_mode: host

  hello:
    container_name: hello
    image: nginxdemos/hello
    ports:
      - 8987:80
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.hello.rule=Host(`hello.home.v9n.us`)"
      - "traefik.http.routers.hello.entrypoints=websecure"
      - "traefik.http.routers.hello.tls.certresolver=le"
      - "traefik.http.services.hello.loadbalancer.server.port=80"
      - "traefik.http.routers.hello.middlewares=hellomiddleware"
      - "traefik.http.middlewares.hellomiddleware.basicauth.users=hello:$$apr1$$eR7AzTiF$$vA358rJ0RC0y8qYtAmETC0"

  tcpproxyhello:
    container_name: tcpproxyhello
    image: amaysim/docker-tcp-proxy
    environment:
      - CONTAINER_PORT=80
      - REMOTE_HOST=172.21.0.5
      - REMOTE_PORT=80
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.tcpproxyhello.rule=Host(`tcpproxyhello.home.v9n.us`)"
      - "traefik.http.routers.tcpproxyhello.entrypoints=websecure"
      - "traefik.http.routers.tcpproxyhello.tls.certresolver=le"
      - "traefik.http.services.tcpproxyhello.loadbalancer.server.port=80"
      - "traefik.http.routers.tcpproxyhello.middlewares=tcpproxyhellomiddleware"
      - "traefik.http.middlewares.tcpproxyhellomiddleware.basicauth.users=hello:$$apr1$$eR7AzTiF$$vA358rJ0RC0y8qYtAmETC0"

  tcpproxy_prometheus:
    container_name: tcpproxy_prometheus
    image: amaysim/docker-tcp-proxy
    environment:
      - CONTAINER_PORT=80
      - REMOTE_HOST=172.17.0.1
      - REMOTE_PORT=9090
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.home.v9n.us`)"
      - "traefik.http.routers.prometheus.entrypoints=websecure"
      - "traefik.http.routers.prometheus.tls.certresolver=le"
      - "traefik.http.services.prometheus.loadbalancer.server.port=80"
      - "traefik.http.routers.prometheus.middlewares=prometheusauthmiddleware"
      - "traefik.http.middlewares.prometheusauthmiddleware.basicauth.users=prometheus:$$apr1$$u13f5Obh$$ERJ3TfhQ/Wsz3gpwGj9gd1"

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.36.0
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    devices:
      - /dev/kmsg
    privileged: true
    expose:
      - 8080
    ports:
      - "8005:8080"
    networks:
      - monitoring
#    command: --disable_metrics=diskIO

  tftp_for_erlite_backup:
    image: jumanjiman/tftp-hpa
    ports:
      - "69:69/udp"
    volumes:
      - /home/trick/tftp/erlite-backups:/backups
    entrypoint: ['in.tftpd', '-L', '-v', '-v', '-v', '--create', '--permissive', '-u', 'tftp', "-m", "/tftpboot/mapfile", '/backups']


  whoami:
    image: containous/whoami
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.entrypoints=websecure"
      - "traefik.http.routers.whoami.tls.certresolver=le"
      - "traefik.http.routers.whoami.rule=Host(`whoami.home.v9n.us`)"
      - "traefik.http.routers.whoami.middlewares=traefik-forward-auth"
      - "traefik.http.services.whoami.loadbalancer.server.port=80"

  traefik-forward-auth:
    image: thomseddon/traefik-forward-auth:2
    environment:
      - DEFAULT_PROVIDER=generic-oauth
      - PROVIDERS_GENERIC_OAUTH_AUTH_URL=https://github.com/login/oauth/authorize
      - PROVIDERS_GENERIC_OAUTH_TOKEN_URL=https://github.com/login/oauth/access_token
      - PROVIDERS_GENERIC_OAUTH_USER_URL=https://api.github.com/user
      - PROVIDERS_GENERIC_OAUTH_CLIENT_ID=4126728948d59d9ffe20
      - PROVIDERS_GENERIC_OAUTH_CLIENT_SECRET=79b0b9de4e48494310436b23d0c97417dc26532d # FIXME
      # INSECURE_COOKIE is required if not using a https entrypoint
      #- INSECURE_COOKIE=true
      - COOKIE_DOMAIN=auth.home.v9n.us
      - AUTH_HOST=auth.home.v9n.us
      - LOG_LEVEL=trace
      - LOG_FORMAT=json
      - SECRET=2602060ac22d3babdc0a99c23b032101 # FIXME
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik-forward-auth.entrypoints=websecure"
      - "traefik.http.routers.traefik-forward-auth.tls.certresolver=le"
      #- "traefik.http.services.traefik-forward-auth.loadbalancer.server.port=80"
      - "traefik.http.routers.traefik-forward-auth.rule=Host(`auth.home.v9n.us`)"
      - "traefik.http.middlewares.traefik-forward-auth.forwardauth.address=http://traefik-forward-auth:4181"
      - "traefik.http.middlewares.traefik-forward-auth.forwardauth.authResponseHeaders=X-Forwarded-User"
      - "traefik.http.services.traefik-forward-auth.loadbalancer.server.port=4181"

networks:
  monitoring:
    driver: bridge
