version: '2'

services:
  reverse-proxy:
    container_name: traefik
    image: traefik:v2.9.6
    restart: unless-stopped
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.websecure.address=:443"
      - "--entryPoints.web.address=:80"
      - "--certificatesResolvers.le.acme.email=trick@vanstaveren.us"
      - "--certificatesResolvers.le.acme.storage=/acme/acme.json"
      #- "--certificatesResolvers.le.acme.caServer=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesResolvers.le.acme.tlsChallenge=true"
      - "--metrics.prometheus.entryPoint=metrics"
      - "--metrics.prometheus=true"
      - "--entryPoints.metrics.address=:7082"
      #- "--accesslog=true"

    ports:
      - "443:443"
      - "80:80"
      - "8079:8080"
      - "7082:7082"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./acme/:/acme/"
    network_mode: host
  
  tcpproxy_traefik_metrics:
    container_name: tcpproxy_traefik_metrics
    image: amaysim/docker-tcp-proxy
    restart: unless-stopped
    environment:
      - CONTAINER_PORT=80
      - REMOTE_HOST=172.17.0.1
      - REMOTE_PORT=7082
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefikmetrics.rule=Host(`traefikmetrics.home.v9n.us`, `tm22.home.v9n.us`)"
      - "traefik.http.routers.traefikmetrics.entrypoints=websecure"
      - "traefik.http.routers.traefikmetrics.tls.certresolver=le"
      - "traefik.http.services.traefikmetrics.loadbalancer.server.port=80"
      - "traefik.http.routers.traefikmetrics.middlewares=traefikmetricsauth"
      # Note: when used in docker-compose.yml all dollar signs in the hash need to be doubled for escaping.
      # To create user:password pair, it's possible to use this command:
      # echo $(htpasswd -nB user) | sed -e s/\\$/\\$\\$/g
      - "traefik.http.middlewares.traefikmetricsauth.basicauth.users=foo:$$2y$$05$$/GTEnG5nDTMb2wAyPiioFeR1igHfvU31f9xRLCOvS0VBDYzY16BPe" # this is in /etc/prometheus/prometheus.yml on hg.v9n.us

  airsonic:
    container_name: airsonic
    image: linuxserver/airsonic
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
      #- CONTEXT_PATH=<URL_BASE> #optional
      #- JAVA_OPTS=<options> #optional
    volumes:
      - ./config:/config
      #- config:/airsonic/config
      - /mnt/music/Master_Collection:/music
      #- playlists:/airsonic/playlists
      #- podcasts:/airsonic/podcasts
    ports:
      - 4039:4040
      - 8444:8443
    restart: unless-stopped
    #network_mode: host
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.airsonic.rule=Host(`airsonic.home.v9n.us`, `airsonic2.home.v9n.us`)"
      - "traefik.http.routers.airsonic.entrypoints=websecure"
      - "traefik.http.routers.airsonic.tls.certresolver=le"
      - "traefik.http.services.airsonic.loadbalancer.server.port=4040"
  
  hass:
    container_name: hass
    image: homeassistant/home-assistant:2023.2
    volumes:
      - ./hass-config:/config
    devices:
      - /dev/ttyUSB0
    environment:
      - TZ=America/Chicago
    restart: always
    network_mode: host
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.hass.rule=Host(`hass.vanstaveren.us`, `hass3.home.v9n.us`)"
      - "traefik.http.routers.hass.entrypoints=websecure"
      - "traefik.http.routers.hass.tls.certresolver=le"
      - "traefik.http.services.hass.loadbalancer.server.port=8123"

  nextcloud:
    container_name: nextcloud
    image: nextcloud:25.0.2-apache
    volumes:
      - /mnt/nextcloud:/var/www/html
      - /mnt/pictures:/mnt/pictures
      - /mnt/music/Master_Collection:/mnt/music
    mem_limit: 1500m
    restart: always
    environment:
      - NEXTCLOUD_TRUSTED_DOMAIN=nextcloud.home.v9n.us"
      - TRUSTED_PROXIES=172.16.0.0/12
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nextcloud.rule=Host(`nextcloud.home.v9n.us`, `nextcloud22.home.v9n.us`)"
      - "traefik.http.routers.nextcloud.entrypoints=websecure"
      - "traefik.http.routers.nextcloud.tls.certresolver=le"
      - "traefik.http.services.nextcloud.loadbalancer.server.port=80"

  unifi-poller:
    container_name: unifi-poller
    image: golift/unifi-poller
    volumes:
      - ./unifi-poller/unifi-poller.conf:/config/unifi-poller.conf
    restart: always
    network_mode: host

  hello:
    container_name: hello
    image: nginxdemos/hello
    restart: unless-stopped
    ports:
      - 8987:80
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.hello.rule=Host(`hello.home.v9n.us`, `hello2.home.v9n.us`)"
      - "traefik.http.routers.hello.entrypoints=websecure"
      - "traefik.http.routers.hello.tls.certresolver=le"
      - "traefik.http.services.hello.loadbalancer.server.port=80"
      - "traefik.http.routers.hello.middlewares=hellomiddleware"
      - "traefik.http.middlewares.hellomiddleware.basicauth.users=hello:$$2y$$05$$BM8HLQuXwv7huaKOHehfu.AfAt4l8dxPPHnhdFlKJ7yDGx9uucHU2" # hello:hello

  tcpproxyhello:
    container_name: tcpproxyhello
    image: amaysim/docker-tcp-proxy
    restart: unless-stopped
    environment:
      - CONTAINER_PORT=80
      - REMOTE_HOST=hello
      - REMOTE_PORT=80
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.tcpproxyhello.rule=Host(`tcpproxyhello.home.v9n.us`, `t234.home.v9n.us`)"
      - "traefik.http.routers.tcpproxyhello.entrypoints=websecure"
      - "traefik.http.routers.tcpproxyhello.tls.certresolver=le"
      - "traefik.http.services.tcpproxyhello.loadbalancer.server.port=80"
      - "traefik.http.routers.tcpproxyhello.middlewares=tcpproxyhellomiddleware"
      - "traefik.http.middlewares.tcpproxyhellomiddleware.basicauth.users=hello:$$apr1$$eR7AzTiF$$vA358rJ0RC0y8qYtAmETC0"

  tcpproxy_prometheus:
    container_name: tcpproxy_prometheus
    image: amaysim/docker-tcp-proxy
    restart: unless-stopped
    environment:
      - CONTAINER_PORT=80
      - REMOTE_HOST=172.17.0.1
      - REMOTE_PORT=9090
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.home.v9n.us`, `prometheus2.home.v9n.us`)"
      - "traefik.http.routers.prometheus.entrypoints=websecure"
      - "traefik.http.routers.prometheus.tls.certresolver=le"
      - "traefik.http.services.prometheus.loadbalancer.server.port=80"
      - "traefik.http.routers.prometheus.middlewares=prometheusauthmiddleware"
      - "traefik.http.middlewares.prometheusauthmiddleware.basicauth.users=prometheus:$$apr1$$u13f5Obh$$ERJ3TfhQ/Wsz3gpwGj9gd1"

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.2
    container_name: cadvisor
    restart: unless-stopped
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    devices:
      - /dev/kmsg
    privileged: true
    expose:
      - 8080
    ports:
      - "8005:8080"
    networks:
      - monitoring
    command:
      - "--docker_only"
      - "--disable_metrics=percpu,sched,tcp,udp,disk,diskIO,hugetlb,referenced_memory,cpu_topology,resctrl"
      - "--housekeeping_interval=30s"

  tftp_for_erlite_backup:
    image: jumanjiman/tftp-hpa
    restart: unless-stopped
    ports:
      - "69:69/udp"
    volumes:
      - /home/trick/tftp/erlite-backups:/backups
    entrypoint: ['in.tftpd', '-L', '-v', '-v', '-v', '--create', '--permissive', '-u', 'tftp', "-m", "/tftpboot/mapfile", '/backups']


  whoami:
    image: containous/whoami
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.entrypoints=websecure"
      - "traefik.http.routers.whoami.tls.certresolver=le"
      - "traefik.http.routers.whoami.rule=Host(`whoami.home.v9n.us`, `whoami212.home.v9n.us`)"
      - "traefik.http.routers.whoami.middlewares=traefik-forward-auth"
      - "traefik.http.services.whoami.loadbalancer.server.port=80"

  traefik-forward-auth:
    container_name: traefik-forward-auth
    image: thomseddon/traefik-forward-auth:2
    restart: unless-stopped
    environment:
      - DEFAULT_PROVIDER=generic-oauth
      - PROVIDERS_GENERIC_OAUTH_AUTH_URL=https://github.com/login/oauth/authorize
      - PROVIDERS_GENERIC_OAUTH_TOKEN_URL=https://github.com/login/oauth/access_token
      - PROVIDERS_GENERIC_OAUTH_USER_URL=https://api.github.com/user
      - PROVIDERS_GENERIC_OAUTH_CLIENT_ID=09eeb1649470dba8e72b
      # INSECURE_COOKIE is required if not using a https entrypoint
      #- INSECURE_COOKIE=true
      - LOG_LEVEL=trace
      - LOG_FORMAT=json
      - DOMAIN=vanstaveren.us
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.traefik-forward-auth.forwardauth.address=http://traefik-forward-auth:4181"
      - "traefik.http.middlewares.traefik-forward-auth.forwardauth.authResponseHeaders=X-Forwarded-User"
      - "traefik.http.services.traefik-forward-auth.loadbalancer.server.port=4181"

  github-auth:
    container_name: github-auth
    image: thomseddon/traefik-forward-auth:latest # must run latest for auth mode because https://github.com/thomseddon/traefik-forward-auth/pull/217
    restart: unless-stopped
    environment:
      - DEFAULT_PROVIDER=generic-oauth
      - PROVIDERS_GENERIC_OAUTH_AUTH_URL=https://github.com/login/oauth/authorize
      - PROVIDERS_GENERIC_OAUTH_TOKEN_URL=https://github.com/login/oauth/access_token
      - PROVIDERS_GENERIC_OAUTH_USER_URL=https://api.github.com/user
      - PROVIDERS_GENERIC_OAUTH_CLIENT_ID=4126728948d59d9ffe20
      - COOKIE_DOMAIN=home.v9n.us
      - AUTH_HOST=auth.home.v9n.us
      - LOG_LEVEL=trace
      - LOG_FORMAT=json
      - DOMAIN=vanstaveren.us
      - COOKIE_NAME=_fw_gh_auth2
      - CSRF_COOKIE_NAME=_fw_csrf_gh_auth2
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.github-auth.forwardauth.address=http://github-auth:4181"
      - "traefik.http.middlewares.github-auth.forwardauth.authResponseHeaders=X-Forwarded-User"
      - "traefik.http.services.github-auth.loadbalancer.server.port=4181"
      - "traefik.http.routers.github-auth.entrypoints=websecure"
      - "traefik.http.routers.github-auth.tls.certresolver=le"
      - "traefik.http.routers.github-auth.rule=Host(`auth.home.v9n.us`, `auth2.home.v9n.us`)"

  whoami44:
    image: containous/whoami
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami44.entrypoints=websecure"
      - "traefik.http.routers.whoami44.tls.certresolver=le"
      - "traefik.http.routers.whoami44.rule=Host(`whoami44.home.v9n.us`, `whoami88.home.v9n.us`)"
      - "traefik.http.routers.whoami44.middlewares=github-auth"
      - "traefik.http.services.whoami44.loadbalancer.server.port=80"

  proxy_autorx_radiopi:
    container_name: autorx_radiopi
    image: amaysim/docker-tcp-proxy
    restart: unless-stopped
    environment:
      - CONTAINER_PORT=80
      - REMOTE_HOST=radiopi.home.vanstaveren.us
      - REMOTE_PORT=5000
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.autorx-radiopi.rule=Host(`autorxradiopi.home.v9n.us`)"
      - "traefik.http.routers.autorx-radiopi.entrypoints=websecure"
      - "traefik.http.routers.autorx-radiopi.tls.certresolver=le"
      - "traefik.http.routers.autorx-radiopi.middlewares=github-auth"
      - "traefik.http.services.autorx-radiopi.loadbalancer.server.port=80"

  proxy_daylapse1:
    image: amaysim/docker-tcp-proxy
    restart: unless-stopped
    environment:
      - CONTAINER_PORT=80
      - REMOTE_HOST=daylapse1.home.vanstaveren.us
      - REMOTE_PORT=8080
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.daylapse.rule=Host(`daylapse.home.v9n.us`)"
      - "traefik.http.routers.daylapse.entrypoints=websecure"
      - "traefik.http.routers.daylapse.tls.certresolver=le"
      - "traefik.http.services.daylapse.loadbalancer.server.port=80"

  proxy_traefik_dashboard:
    image: amaysim/docker-tcp-proxy
    restart: unless-stopped
    environment:
      - CONTAINER_PORT=80
      - REMOTE_HOST=172.17.0.1
      - REMOTE_PORT=8080
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik-dashboard.rule=Host(`traefik.home.v9n.us`)"
      - "traefik.http.routers.traefik-dashboard.entrypoints=websecure"
      - "traefik.http.routers.traefik-dashboard.tls.certresolver=le"
      - "traefik.http.routers.traefik-dashboard.middlewares=github-auth"
      - "traefik.http.services.traefik-dashboard.loadbalancer.server.port=80"
  
  proxy_grafana:
    image: amaysim/docker-tcp-proxy
    restart: unless-stopped
    environment:
      - CONTAINER_PORT=80
      - REMOTE_HOST=172.17.0.1
      - REMOTE_PORT=3000
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.home.v9n.us`)"
      - "traefik.http.routers.grafana.entrypoints=websecure"
      - "traefik.http.routers.grafana.tls.certresolver=le"
      - "traefik.http.routers.grafana.middlewares=github-auth"
      - "traefik.http.services.grafana.loadbalancer.server.port=80"
  
  test_grafana:
    image: grafana/grafana
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.gf2.rule=Host(`gf2.home.v9n.us`)"
      - "traefik.http.routers.gf2.entrypoints=websecure"
      - "traefik.http.routers.gf2.tls.certresolver=le"
      - "traefik.http.routers.gf2.middlewares=github-auth"
      - "traefik.http.services.gf2.loadbalancer.server.port=3000"
    environment:
      - GF_AUTH_PROXY_ENABLED=true
      - GF_AUTH_PROXY_HEADER_NAME=X-Firwarded-User
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_USERS_AUTO_ASSIGN_ORG=true
      - GF_USERS_AUTO_ASSIGN_ORG_ROLE=Editor
      - GF_FOO_BAR=Editor
  
  proxy_openwebrx:
    image: amaysim/docker-tcp-proxy
    restart: unless-stopped
    environment:
      - CONTAINER_PORT=80
      - REMOTE_HOST=172.16.17.57
      - REMOTE_PORT=8073
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.openwebrx.rule=Host(`openwebrx.home.v9n.us`)"
      - "traefik.http.routers.openwebrx.entrypoints=websecure"
      - "traefik.http.routers.openwebrx.tls.certresolver=le"
      - "traefik.http.routers.openwebrx.middlewares=github-auth"
      - "traefik.http.services.openwebrx.loadbalancer.server.port=80"
  
  proxy_octoprint:
    image: amaysim/docker-tcp-proxy
    restart: unless-stopped
    environment:
      - CONTAINER_PORT=80
      - REMOTE_HOST=octopi.home.vanstaveren.us
      - REMOTE_PORT=80
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.octoprint.rule=Host(`octoprint.home.v9n.us`)"
      - "traefik.http.routers.octoprint.entrypoints=websecure"
      - "traefik.http.routers.octoprint.tls.certresolver=le"
      - "traefik.http.routers.octoprint.middlewares=github-auth"
      - "traefik.http.services.octoprint.loadbalancer.server.port=80"

networks:
  monitoring:
    driver: bridge
